import java.text.SimpleDateFormat

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'distribution'
    
}

apply plugin: 'eclipse'

repositories {
    mavenLocal() 
    ivy {
        name 'ivyPromReleases'
        patternLayout{
            artifact '[organisation]/Releases/Packages/[module]/[revision]/[artifact]-[revision].[ext]'
            ivy '[organisation]/Releases/Packages/[module]/[revision]/ivy.xml'
        }
        url = uri('https://svn.win.tue.nl/repos')
        content {
            includeGroup "prom"
        }
    }
    ivy {
        name 'ivyPromLibraries'
        patternLayout{
            artifact '[module]/[revision]/[artifact]-[revision].[ext]'
            ivy '[module]/[revision]/ivy.xml'
        }
        url = uri('https://svn.win.tue.nl/repos/prom/Libraries')
    }
    mavenCentral()
}

dependencies {
    implementation 'prom:EarthMoversStochasticConformanceChecking:latest'
    implementation 'prom:StochasticAwareConformanceChecking:latest'
    implementation 'prom:StochasticWeightEstimation:latest'

    // This dependency is used by the application.
    implementation 'qut.pm:prom-helpers:0.8.6'
    implementation 'org.simpleframework:simple-xml:2.7.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClassName = 'qut.pm.toothpaste.ModelRunner'
}

jar {
    doFirst {
        manifest.attributes(
                'Class-Path': 
                    configurations.runtimeClasspath.files.collect { "$it.name" }.join(' '),
                'Main-Class': 'qut.pm.toothpaste.ModelRunner'
    )
  }

  delete 'buildid.txt'
  outputs.file('buildid.txt')
  inputs.property('version', project.version)

  doLast {
    project.file('buildid.txt') << project.version
    project.file('buildid.txt') <<  new SimpleDateFormat(" dd-MM-yyyy HH:mm:ss").format(new Date())
  }
}


group = 'qut.pm'
version = '0.9.2.1'
description = 'toothpaste'
sourceCompatibility = '1.8'

clean{
    mkdir "var"
}

task(pnmlToDot, dependsOn: 'classes', type: JavaExec) {
   main 'qut.pm.prom.helpers.PetriNetConverter'
   classpath sourceSets.main.runtimeClasspath
   jvmArgs '-Dlog4j.configurationFile=config/static/log4j2.xml'
}

task(copyTask, dependsOn: 'classes', type: JavaExec) {
   main 'qut.pm.spm.results.CopyTask'
   classpath sourceSets.main.runtimeClasspath
}

task(addNote, dependsOn: 'classes', type: JavaExec) {
   main 'qut.pm.spm.results.AddNote'
   classpath sourceSets.main.runtimeClasspath
}


applicationDistribution.from('config') {
    into "config"
}

applicationDistribution.from('scripts') {
    into "scripts"
}

applicationDistribution.from('ldlib') {
    into "ldlib"
}

applicationDistribution.from('hbin') {
    into "bin"
}


distributions {
    main {
        distributionBaseName = 'toothpaste'
        contents {
            from 'buildid.txt'
        }
    }
}



